# Generated by Django 5.0.4 on 2024-04-10 18:21

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('project_catalog', '0003_auto_20240410_2055'),
    ]

    operations = [
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=1000)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_delete', models.DateTimeField(blank=True, null=True)),
                ('date_last_change', models.DateTimeField(auto_now=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('created', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('file', models.FileField(upload_to='uploads/CommentsFile')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.comment')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryOfChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(default=uuid.uuid4)),
                ('value', models.JSONField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/HistoryOfChange')),
                ('date', models.DateTimeField()),
                ('changer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('link_to_project_in_git', models.URLField(blank=True, null=True)),
                ('link_to_project_in_ser_reg', models.URLField(blank=True, null=True)),
                ('expected_testbed_start_date', models.DateField(blank=True, null=True)),
                ('complexity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.projectcomplexity')),
                ('layer_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.layertype')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.projectstate')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='layer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='project_catalog.layer'),
        ),
        migrations.CreateModel(
            name='ChangeLayerState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_installation', models.DateTimeField(auto_now=True, unique=True)),
                ('installed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.projectstate')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_catalog.comment')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.layer')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('version', models.CharField(help_text='Указывается при помощи 2 чисел разделенных запятой', max_length=10)),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('project_goal', models.CharField(blank=True, max_length=2000)),
                ('project_tasks', models.TextField(blank=True)),
                ('project_functionality', models.TextField(blank=True)),
                ('launch_date', models.DateField(blank=True, null=True)),
                ('complexity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.projectcomplexity')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.priority')),
                ('project_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.projecttype')),
                ('quarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_catalog.quarter')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.projectstate')),
                ('stack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.stack')),
            ],
        ),
        migrations.CreateModel(
            name='Observer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_full', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='observer_account', to=settings.AUTH_USER_MODEL)),
                ('project', models.ManyToManyField(blank=True, null=True, to='project_catalog.project')),
            ],
        ),
        migrations.AddField(
            model_name='layer',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.project'),
        ),
        migrations.AddField(
            model_name='comment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.project'),
        ),
        migrations.CreateModel(
            name='ChangeProjectState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_installation', models.DateTimeField(auto_now=True, unique=True)),
                ('installed', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.projectstate')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_catalog.comment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=500)),
                ('file_type', models.CharField(choices=[('t_entry', 'Введение'), ('t_ps', 'ТЗ'), ('t_fun_desc', 'Функциональное описание'), ('t_scheme', 'Схема'), ('t_other', 'Другое')], max_length=20)),
                ('file', models.FileField(upload_to='uploads/ProjectDocument')),
                ('file_ver', models.CharField(help_text='Указывается при помощи 2 чисел разделенных запятой', max_length=10)),
                ('is_visible', models.BooleanField(default=False)),
                ('prev', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_catalog.projectdocument')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.project')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_catalog.projectdocument'),
        ),
        migrations.AddField(
            model_name='layer',
            name='stack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.stack'),
        ),
        migrations.CreateModel(
            name='StackElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('version', models.CharField(max_length=20, unique=True)),
                ('introduced', models.DateField(blank=True, null=True)),
                ('depends_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_catalog.stackelement')),
            ],
        ),
        migrations.AddField(
            model_name='stack',
            name='elements',
            field=models.ManyToManyField(to='project_catalog.stackelement'),
        ),
        migrations.CreateModel(
            name='Stackholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('organization', models.CharField(max_length=200)),
                ('has_information', models.CharField(max_length=2000)),
                ('contact_information', models.JSONField()),
                ('observer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_catalog.observer')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.project')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('patronymic', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email addres')),
                ('is_archived', models.BooleanField(default=False)),
                ('stack', models.ManyToManyField(to='project_catalog.stack')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_member_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEmployeе',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_application', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(blank=True, default=0, null=True)),
                ('is_responsible', models.BooleanField(default=False)),
                ('date_joining', models.DateField(blank=True, null=True)),
                ('date_termination', models.DateField(blank=True, null=True)),
                ('layer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='project_catalog.layer')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project_catalog.project')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='project_catalog.teammemberrole')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_catalog.teammember')),
            ],
        ),
    ]
